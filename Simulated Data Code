
%Define the path to the ground truth data
load('D:/Medicine/Y3/researchprojectstuff/5. sim/params_sim.mat')
params_train = [params_sim];


%Define the VERDICT model (f) - Cannot be shared here due to lack of permission. Must request from original owners (see Code Availability in the project report)
f = 

%Load the trained deep learning model
load('D:/model.mat')

%In MATLAB, you have to be in the model folder
load('model.mat','model')

%Define the acquisition protocol used to train the deep learning model
protocol=model.protocol;

%Generate simulated MRI data based on the protocol
database = zeros(size(params_train,1), numel(protocol.G));
parfor i=1:size(params_train,1)
database(i,:)=f(params_train(i,:),protocol);
end
SNR=model.SNR;
database_noisy = database + 1./SNR.*randn(size(database));

%Define path to the trained deep learning model
training_folder = '';
trainedDLname = [training_folder '/DLtrained'];

%Define place to store the estimates made by the deep learning models
mkdir('D:/EstimatesStore');
pythonpath = 'python';

%Apply the deep learning models to the simulated MRI data
mpgMean=apply_DL_python(database_noisy,'VERDICT_brain', trainedDLname, pythonpath, 'D:/EstimatesStore' , training_folder);

%Apply cosine transformation to the output estimates made by the deep learning models
output_pars=zeros(size(mpgMean));output_pars(:,1) = cos(mpgMean(:,1)).^2;output_pars(:,2) = (1-cos(mpgMean(:,1)).^2).*cos(mpgMean(:,2)).^2;output_pars(:,3) = (1-cos(mpgMean(:,1)).^2).*(1-cos(mpgMean(:,2)).^2).*cos(mpgMean(:,3)).^2;output_pars(:,4:end) = mpgMean(:,4:end); input_pars=zeros(size(params_train));input_pars(:,1) = cos(params_train(:,1)).^2;input_pars(:,2) = (1-cos(params_train(:,1)).^2).*cos(params_train(:,2)).^2;input_pars(:,3) = (1-cos(params_train(:,1)).^2).*(1-cos(params_train(:,2)).^2).*cos(params_train(:,3)).^2;input_pars(:,4:end) = params_train(:,4:end);

%Error between input (ground truth data) and output estimates made by the deep learning models
error = abs(input_pars-output_pars);
